[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About",
    "section": "",
    "text": "About This Project\nThis website contains my summaries of key concepts from the Statistical Genetics (STAT 494) course. Choose from the summaries below to explore further:\n\nContent Summary 1: p &gt; n Problem\nContent Summary 2: Genetic Association, Population Stratification, and Omitted Variable Bias"
  },
  {
    "objectID": "unit2.html",
    "href": "unit2.html",
    "title": "Statistical Genetics - Unit 2",
    "section": "",
    "text": "In this unit, we learned how genetic ancestry influences GWAS and PCA can be applied to adjust for population structure. Through journal clubs discussions, simulation studies, lab, and lectures, we examined the challenges caused by confounding, conducted PCA on genetic data, and evaluated the results using few diagnostic tools."
  },
  {
    "objectID": "unit1.html#motivation-personal-learning-goals",
    "href": "unit1.html#motivation-personal-learning-goals",
    "title": "Unit 1: p > n problem",
    "section": "2.1 1.1 Motivation & Personal Learning Goals",
    "text": "2.1 1.1 Motivation & Personal Learning Goals\nIn this course, I aimed to:\n\nImplement appropriate statistical techniques in genetics.\n\nImprove my ability to read and summarize journal articles.\n\nDevelop foundational skills for future graduate work in Statistics, including time management, self-assessment, and working through challenges.\n\nThis document synthesizes what I’ve learned, referencing:\n\nClass slides on Genome-Wide Association Studies (GWAS), the p &gt; n problem, Manhattan plots, QQ plots, etc.\nLab assignments exploring marginal regression, multiple testing correction, and simulation-based approaches.\nJournal clubs & reflections that shaped my understanding of both the technical details and ethical considerations in statistical genetics."
  },
  {
    "objectID": "unit1.html#what-is-gwas",
    "href": "unit1.html#what-is-gwas",
    "title": "Unit 1: p > n Problem",
    "section": "3.1 2.1 What is GWAS?",
    "text": "3.1 2.1 What is GWAS?\nGenome-Wide Association Studies look for associations between genetic variants (e.g., SNPs) and traits & diseases. Each person’s genetic data is represented as a matrix of 0/1/2 values. This denotes the count of the minor allele at each SNP. The big challenge often is:\n\nHuge number of SNPs (p) vs. relatively smaller number of individuals (n)\nnecessitating marginal (single SNP) regression rather than a full multiple regression.\n\nKey Insight: Ordinary Least Squares fails if \\(p&gt;n\\) because \\(X^TX\\) becomes non-invertible."
  },
  {
    "objectID": "unit1.html#from-slides-to-practice",
    "href": "unit1.html#from-slides-to-practice",
    "title": "Unit 1: p > n Problem",
    "section": "3.2 2.2 From Slides to Practice",
    "text": "3.2 2.2 From Slides to Practice\nSome core things we discussed from the slides are:\n\nBasic Regression Model: \\(E[y|x]=\\beta_0+\\beta_1x\\)\nCoding 0/1/2: The number of minor alleles for each SNP.\nManhattan Plots: Visualization of \\(-\\log_{10}(p)\\) vs. genomic position.\n\n\n\nQQ plots: Diagnostic to compare observed p-values/test statistics to the expected null distribution."
  },
  {
    "objectID": "unit1.html#lab-1-the-pn-problem",
    "href": "unit1.html#lab-1-the-pn-problem",
    "title": "Unit 1: p > n problem",
    "section": "4.1 3.1 Lab 1: The p>n Problem",
    "text": "4.1 3.1 Lab 1: The p&gt;n Problem\n\n\nCode\nset.seed(494)\nn &lt;- 100       # number of individuals\np &lt;- 1000      # number of SNPs\nsnp_data &lt;- replicate(p, rbinom(n, size=2, prob=0.1))\ntrait_null &lt;- rnorm(n, mean=65, sd=3)\ndat &lt;- data.frame(y = trait_null, snp_data)\n# mod_full &lt;- lm(y ~ ., data = dat) # leads to singular fit"
  },
  {
    "objectID": "unit1.html#lab-2-implementing-visualizing-marginal-regression",
    "href": "unit1.html#lab-2-implementing-visualizing-marginal-regression",
    "title": "Unit 1: p > n problem",
    "section": "4.2 3.2 Lab 2: Implementing & Visualizing Marginal Regression",
    "text": "4.2 3.2 Lab 2: Implementing & Visualizing Marginal Regression\n\n\nCode\n# library(snpStats)\n# library(broom)\n# library(ggplot2)\n# library(qqman)\n# X &lt;- as(hapmap$genotypes, \"numeric\")\n# set.seed(494)\n# trait_y &lt;- 2 * X[,\"rs2476601\"] + rnorm(nrow(X), 0, 1)\n# pvals &lt;- numeric(ncol(X))\n# for (j in seq_len(ncol(X))) {\n#   mod &lt;- lm(trait_y ~ X[, j])\n#   pvals[j] &lt;- tidy(mod)$p.value[2]\n# }\n# results_df &lt;- hapmap$map %&gt;% mutate(P = pvals)\n# manhattan(results_df, chr=\"chromosome\", bp=\"position\", p=\"P\", snp=\"snp.name\", ylim=c(0,10))\n\n\nThis is a simple implementation of a marginal regression in GWAS. Although effective for finding associations, this approach can lead to false positives if multiple testing corrections are not applied.\nBonferroni vs. Simulation-Based Correction\nBonferroni Correction: Divides the significance level by the number of tests. Simple but overly conservative, particularly when SNPs are correlated.\nSimulation-Based Methods: Generate null datasets to empirically determine significance thresholds, reducing false positives while maintaining power."
  },
  {
    "objectID": "unit1.html#lab-3-multiple-testing-ld",
    "href": "unit1.html#lab-3-multiple-testing-ld",
    "title": "Unit 1: p > n problem",
    "section": "4.3 3.3 Lab 3: Multiple Testing & LD",
    "text": "4.3 3.3 Lab 3: Multiple Testing & LD\n\n\nCode\n# set.seed(494)\n# M &lt;- 500\n# n &lt;- nrow(X)\n# m &lt;- ncol(X)\n# min_pvals &lt;- replicate(M, {\n#   y_null &lt;- rnorm(n, 0, 1)\n#   p_tmp &lt;- numeric(m)\n#   for (j in seq_len(m)) {\n#     p_tmp[j] &lt;- tidy(lm(y_null ~ X[, j]))$p.value[2]\n#   }\n#   min(p_tmp)\n# })\n# thresh_5 &lt;- quantile(min_pvals, probs=0.05)"
  },
  {
    "objectID": "unit1.html#implementing-statistical-techniques",
    "href": "unit1.html#implementing-statistical-techniques",
    "title": "Unit 1: p > n problem",
    "section": "5.1 4.1 Implementing Statistical Techniques",
    "text": "5.1 4.1 Implementing Statistical Techniques\n\nMarginal Regression: Successfully coded single-SNP testing.\n\nMatrix Calculus & p &gt; n: Gained comfort with why OLS is undefined in high dimensions.\n\nMultiple Testing: Explored Bonferroni vs. simulation-based."
  },
  {
    "objectID": "unit1.html#reading-summarizing-articles",
    "href": "unit1.html#reading-summarizing-articles",
    "title": "Unit 1: p > n problem",
    "section": "5.2 4.2 Reading & Summarizing Articles",
    "text": "5.2 4.2 Reading & Summarizing Articles\n\nWeekly Journal Club exposed me to real-world GWAS methodologies.\n\nLearned to interpret Manhattan plots and QQ plots."
  },
  {
    "objectID": "unit1.html#broader-skill-development",
    "href": "unit1.html#broader-skill-development",
    "title": "Unit 1: p > n problem",
    "section": "5.3 4.3 Broader Skill Development",
    "text": "5.3 4.3 Broader Skill Development\n\nSelf-Assessment: Labs and reflections forced me to regularly check progress on implementing regression code, reading documentation, and time management.\n\nHandling Challenges: Overcame frustrations with large loops in R by using caching (cache:true) and smaller data subsets."
  },
  {
    "objectID": "unit2.html#local-vs-global-ancestry",
    "href": "unit2.html#local-vs-global-ancestry",
    "title": "Statistical Genetics - Unit 2",
    "section": "3.1 Local vs Global Ancestry",
    "text": "3.1 Local vs Global Ancestry\n\nLocal Ancestry refers to specific segments of DNA inherited from different ancestral populations.\nGlobal Ancestry represents the proportion of DNA inherited from various populations across the entire genome.\n\nFor example: A genome that is 40% from Population 1 and 60% from Population 2 reflects global ancestry proportions of 0.40 and 0.60.\nChallange: Determining the ancestral origin of genetic segments is difficult without robust comparison data."
  },
  {
    "objectID": "unit2.html#performing-pca-in-r",
    "href": "unit2.html#performing-pca-in-r",
    "title": "Statistical Genetics - Unit 2",
    "section": "4.1 Performing PCA in R",
    "text": "4.1 Performing PCA in R\n\n\nCode\nlibrary(tidyverse)\n\n\nWarning: package 'ggplot2' was built under R version 4.3.2\n\n\nWarning: package 'tidyr' was built under R version 4.3.2\n\n\nWarning: package 'purrr' was built under R version 4.3.3\n\n\nWarning: package 'lubridate' was built under R version 4.3.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(GGally)\n\n\nWarning: package 'GGally' was built under R version 4.3.2\n\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\n\nCode\n# Load data\npcadata &lt;- read_csv('https://mac-stat.github.io/statgen/data/pca_toy_data.csv')\n\n\nRows: 1000 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (17): population, trait, SNP1, SNP2, SNP3, SNP4, SNP5, SNP6, SNP7, SNP8,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# Perform PCA\ngeno &lt;- pcadata %&gt;% select(-population, -trait)\npca_out &lt;- prcomp(geno, center = TRUE, scale = TRUE)\npca_scores &lt;- pca_out$x"
  },
  {
    "objectID": "unit2.html#visualzing-pca-results",
    "href": "unit2.html#visualzing-pca-results",
    "title": "Statistical Genetics - Unit 2",
    "section": "4.2 Visualzing PCA results",
    "text": "4.2 Visualzing PCA results\n\n\nCode\npca_scores_df &lt;- as.data.frame(pca_scores) %&gt;%\n  mutate(population = pcadata$population)\n\nggplot(pca_scores_df, aes(x = PC1, y = PC2, color = as.factor(population))) +\n  geom_point(alpha = 0.7, size = 2) +\n  labs(title = \"PC1 vs. PC2 Scores\", color = \"Population\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nThis is the Score plot. This tells us…"
  },
  {
    "objectID": "unit2.html#scree-plot",
    "href": "unit2.html#scree-plot",
    "title": "Statistical Genetics - Unit 2",
    "section": "5.1 Scree Plot",
    "text": "5.1 Scree Plot\nA scree plot helps determine how many PCs are necessary to capture the majority of variance.\n\n\nCode\nlibrary(SNPRelate)\n\n\nLoading required package: gdsfmt\n\n\nWarning: package 'gdsfmt' was built under R version 4.4.2\n\n\nCode\n# Open the GDS file\ngenofile &lt;- snpgdsOpen(snpgdsExampleFileName())\n\n# Perform PCA using SNPRelate\npca &lt;- snpgdsPCA(genofile, num.thread = 2)\n\n\nPrincipal Component Analysis (PCA) on genotypes:\nExcluding 365 SNPs on non-autosomes\nExcluding 1 SNP (monomorphic: TRUE, MAF: NaN, missing rate: NaN)\n    # of samples: 279\n    # of SNPs: 8,722\n    using 2 threads\n    # of principal components: 32\nPCA:    the sum of all selected genotypes (0,1,2) = 2446510\nCPU capabilities:\nFri Mar 28 13:48:38 2025    (internal increment: 1760)\n\n[..................................................]  0%, ETC: ---        \n[==================================================] 100%, completed, 0s\nFri Mar 28 13:48:38 2025    Begin (eigenvalues and eigenvectors)\nFri Mar 28 13:48:38 2025    Done.\n\n\nCode\n# Calculate variance explained\npc.percent &lt;- pca$varprop * 100\n\n# Plot the scree plot\nplot(pc.percent, type = \"b\",\n     xlab = \"Principal Component\",\n     ylab = \"Percent Variance Explained\",\n     main = \"Scree Plot using SNPRelate\")\n\n\n\n\n\n\n\n\n\nCode\n# Close the GDS file\nsnpgdsClose(genofile)\n\n\n\nPC1 captures the largest proportion of variance\nThe variance explained deceases with each subsequent PC."
  },
  {
    "objectID": "unit2.html#snprelate-package",
    "href": "unit2.html#snprelate-package",
    "title": "Statistical Genetics - Unit 2",
    "section": "5.1 SNPRelate Package",
    "text": "5.1 SNPRelate Package\nSNPRelate is a powerful R package designed for analyzing large-scale genomic datasets efficiently. It is widely used for performing Principal Component Analysis (PCA), kinship analysis, Linkage Disequilibrium (LD) pruning, and other genetic association studies. This package is particularly beneficial in genome-wide association studies (GWAS) where population structure can act as a confounder, leading to spurious associations.\nLoading the library and exploring the tutorial\n\n\nCode\nlibrary(SNPRelate)\n\n\nWarning: package 'SNPRelate' was built under R version 4.3.2\n\n\nLoading required package: gdsfmt\n\n\nSNPRelate -- supported by Streaming SIMD Extensions 2 (SSE2)\n\n\nCode\nvignette(\"SNPRelate\", package = \"SNPRelate\")\n\n\nstarting httpd help server ...\n\n\n done\n\n\nSNPRelate uses Genomic Data Structure (GDS) files for efficient data storage. For example, 279 individuals with sample IDs stored as sample.id, and 9088 SNPs with SNP information like position, chromosomes, and genotypes.\n\n\nCode\ngenofile &lt;- snpgdsOpen(snpgdsExampleFileName())\ngenofile\n\n\nFile: /Library/Frameworks/R.framework/Versions/4.3-x86_64/Resources/library/SNPRelate/extdata/hapmap_geno.gds (709.6K)\n+    [  ] *\n|--+ sample.id   { VStr8 279 ZIP(29.9%), 679B }\n|--+ snp.id   { Int32 9088 ZIP(34.8%), 12.3K }\n|--+ snp.rs.id   { VStr8 9088 ZIP(40.1%), 36.2K }\n|--+ snp.position   { Int32 9088 ZIP(94.7%), 33.6K }\n|--+ snp.chromosome   { UInt8 9088 ZIP(0.94%), 85B } *\n|--+ snp.allele   { VStr8 9088 ZIP(11.3%), 4.0K }\n|--+ genotype   { Bit2 279x9088, 619.0K } *\n\\--+ sample.annot   [ data.frame ] *\n   |--+ family.id   { VStr8 279 ZIP(34.4%), 514B }\n   |--+ father.id   { VStr8 279 ZIP(31.5%), 220B }\n   |--+ mother.id   { VStr8 279 ZIP(30.9%), 214B }\n   |--+ sex   { VStr8 279 ZIP(17.0%), 95B }\n   \\--+ pop.group   { VStr8 279 ZIP(6.18%), 69B }\n\n\nCode\nsnpgdsClose(genofile)\n\n\nWe can extract population information. (1) CEU: Utah resient of European ancestry. (2) HCB: Han Chinese in Beijing. (3) JPT: Japanese in Tokyo. (4) YRI: Yoruba from Nigeria.\n\n\nCode\ngenofile &lt;- snpgdsOpen(snpgdsExampleFileName())\npop_code &lt;- read.gdsn(index.gdsn(genofile, \"sample.annot/pop.group\"))\ntable(pop_code)\n\n\npop_code\nCEU HCB JPT YRI \n 92  47  47  93 \n\n\nCode\nsnpgdsClose(genofile)\n\n\nLinkage Disequilibrium pruning is a pre-processing step that removes highly correlated SNPs to reduce redundancy and imporve computational efficiency.\n\n\nCode\ngenofile &lt;- snpgdsOpen(snpgdsExampleFileName())\nset.seed(494)\nsnpset &lt;- snpgdsLDpruning(genofile, ld.threshold = 0.2)\n\n\nSNP pruning based on LD:\nExcluding 365 SNPs on non-autosomes\nExcluding 139 SNPs (monomorphic: TRUE, MAF: 0.005, missing rate: 0.05)\n    # of samples: 279\n    # of SNPs: 8,584\n    using 1 thread\n    sliding window: 500,000 basepairs, Inf SNPs\n    |LD| threshold: 0.2\n    method: composite\n|====================|====================|\nChromosome 1: 74.16%, 531/716\n|====================|====================|\nChromosome 2: 71.29%, 529/742\n|====================|====================|\nChromosome 3: 73.40%, 447/609\n|====================|====================|\nChromosome 4: 72.78%, 409/562\n|====================|====================|\nChromosome 5: 75.62%, 428/566\n|====================|====================|\nChromosome 6: 73.98%, 418/565\n|====================|====================|\nChromosome 7: 75.21%, 355/472\n|====================|====================|\nChromosome 8: 69.88%, 341/488\n|====================|====================|\nChromosome 9: 76.92%, 320/416\n|====================|====================|\nChromosome 10: 73.29%, 354/483\n|====================|====================|\nChromosome 11: 76.06%, 340/447\n|====================|====================|\nChromosome 12: 74.47%, 318/427\n|====================|====================|\nChromosome 13: 75.58%, 260/344\n|====================|====================|\nChromosome 14: 75.89%, 214/282\n|====================|====================|\nChromosome 15: 75.95%, 199/262\n|====================|====================|\nChromosome 16: 70.86%, 197/278\n|====================|====================|\nChromosome 17: 73.43%, 152/207\n|====================|====================|\nChromosome 18: 73.68%, 196/266\n|====================|====================|\nChromosome 19: 82.50%, 99/120\n|====================|====================|\nChromosome 20: 71.62%, 164/229\n|====================|====================|\nChromosome 21: 75.40%, 95/126\n|====================|====================|\nChromosome 22: 74.14%, 86/116\n6,452 markers are selected in total.\n\n\nCode\nsnpset.id &lt;- unlist(snpset)\nlength(snpset.id)\n\n\n[1] 6452\n\n\nCode\nsnpgdsClose(genofile)\n\n\n\n6,457 SNPs remain from the original 9,088.\n\nWe can now run PCA on the LD-pruned SNPs.\n\n\nCode\ngenofile &lt;- snpgdsOpen(snpgdsExampleFileName())\npca &lt;- snpgdsPCA(genofile, snp.id = snpset.id, num.thread = 2)\n\n\nPrincipal Component Analysis (PCA) on genotypes:\nExcluding 2,636 SNPs (non-autosomes or non-selection)\nExcluding 0 SNP (monomorphic: TRUE, MAF: NaN, missing rate: NaN)\n    # of samples: 279\n    # of SNPs: 6,452\n    using 2 threads\n    # of principal components: 32\nPCA:    the sum of all selected genotypes (0,1,2) = 1809577\nCPU capabilities: Double-Precision SSE2\nMon Apr  7 11:02:33 2025    (internal increment: 5504)\n\n[..................................................]  0%, ETC: ---        \n[==================================================] 100%, completed, 0s\nMon Apr  7 11:02:33 2025    Begin (eigenvalues and eigenvectors)\nMon Apr  7 11:02:33 2025    Done.\n\n\nCode\nsnpgdsClose(genofile)\n\n\n\nEigenvalues and Eigenvectors are calculated to represent the principal components (PCs), and SNPRelate can compute up to 32 PCs using an very efficient algorithms."
  },
  {
    "objectID": "unit2.html#visualizing-snprelate-pca-results",
    "href": "unit2.html#visualizing-snprelate-pca-results",
    "title": "Statistical Genetics - Unit 2",
    "section": "5.2 Visualizing SNPRelate PCA Results",
    "text": "5.2 Visualizing SNPRelate PCA Results\nBelow is the Score plot of the first two PCs:\n\n\nCode\ngenofile &lt;- snpgdsOpen(snpgdsExampleFileName())\nsample.id &lt;- read.gdsn(index.gdsn(genofile, \"sample.id\"))\n\ntab &lt;- data.frame(\n  sample.id = pca$sample.id,\n  pop = factor(pop_code)[match(pca$sample.id, sample.id)],\n  EV1 = pca$eigenvect[, 1],\n  EV2 = pca$eigenvect[, 2]\n)\n\nplot(tab$EV2, tab$EV1, col = as.integer(tab$pop), pch = 19,\n     xlab = \"PC2\", ylab = \"PC1\", main = \"PCA Score Plot\")\nlegend(\"bottomright\", legend = levels(tab$pop), col = 1:nlevels(tab$pop), pch = 19)\n\n\n\n\n\n\n\n\n\nCode\nsnpgdsClose(genofile)\n\n\n\nYou can see that populations tend to from distinct clusters, and the first 2 PCs capture most of the populations structure.\n\nThis plot is called the parallel coordinates plot and it compares the top 16 PCs for each individual across different populations. Similar patterns within populations indicate shared genetic structure.\n\n\nCode\ngenofile &lt;- snpgdsOpen(snpgdsExampleFileName())\nlibrary(MASS)\n\n\n\nAttaching package: 'MASS'\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\n\nCode\nparcoord(pca$eigenvect[, 1:16], col = as.integer(factor(pop_code)))\n\n\n\n\n\n\n\n\n\nCode\nsnpgdsClose(genofile)\n\n\nThe Loadings Plot shows which SNPs contribute to most to each PC. As you can see from the below plot, that SNP2 has the greatest affect to PC1.\n\n\nCode\ngenofile &lt;- snpgdsOpen(snpgdsExampleFileName())\nsnp_load &lt;- snpgdsPCASNPLoading(pca, genofile, num.thread = 1L, verbose = TRUE)\n\n\nSNP Loading:\n    # of samples: 279\n    # of SNPs: 6,452\n    using 1 thread\n    using the top 32 eigenvectors\nSNP Loading:    the sum of all selected genotypes (0,1,2) = 1809577\nMon Apr  7 11:02:33 2025    (internal increment: 44040)\n\n[..................................................]  0%, ETC: ---        \n[==================================================] 100%, completed, 0s\nMon Apr  7 11:02:33 2025    Done.\n\n\nCode\nplot(abs(snp_load$snploading[,1]), type = \"h\",\n     main = \"SNP Loadings for PC1\",\n     xlab = \"SNPs\",\n     ylab = \"Absolute Loading\")\n\n\n\n\n\n\n\n\n\nCode\nsnpgdsClose(genofile)\n\n\nA scree plot helps determine how many PCs are necessary to capture the majority of variance.\n\n\nCode\ngenofile &lt;- snpgdsOpen(snpgdsExampleFileName())\n# Perform PCA using SNPRelate\npca &lt;- snpgdsPCA(genofile, num.thread = 2)\n\n\nPrincipal Component Analysis (PCA) on genotypes:\nExcluding 365 SNPs on non-autosomes\nExcluding 1 SNP (monomorphic: TRUE, MAF: NaN, missing rate: NaN)\n    # of samples: 279\n    # of SNPs: 8,722\n    using 2 threads\n    # of principal components: 32\nPCA:    the sum of all selected genotypes (0,1,2) = 2446510\nCPU capabilities: Double-Precision SSE2\nMon Apr  7 11:02:34 2025    (internal increment: 5504)\n\n[..................................................]  0%, ETC: ---        \n[==================================================] 100%, completed, 0s\nMon Apr  7 11:02:34 2025    Begin (eigenvalues and eigenvectors)\nMon Apr  7 11:02:34 2025    Done.\n\n\nCode\n# Calculate variance explained\npc.percent &lt;- pca$varprop * 100\n\n# Plot the scree plot\nplot(pc.percent, type = \"b\",\n     xlab = \"Principal Component\",\n     ylab = \"Percent Variance Explained\",\n     main = \"Scree Plot using SNPRelate\")\n\n\n\n\n\n\n\n\n\nCode\n# Close the GDS file\nsnpgdsClose(genofile)\n\n\n\nPC1 captures the largest proportion of variance\nThe variance explained deceases with each subsequent PC."
  },
  {
    "objectID": "unit2.html#evaluating-pca-results",
    "href": "unit2.html#evaluating-pca-results",
    "title": "Statistical Genetics - Unit 2",
    "section": "5.3 Evaluating PCA Results",
    "text": "5.3 Evaluating PCA Results\nSo coming back to evaluating PCA results, many useful plot function from the SNPRelate package does a great job evaluation of PCA.\n\nScore Plot Interpretation: The distinct clustering in the score plot suggests that the top PCs capture population structure.\nParallel Coordinates Plot: Consistent patterns within populations validate the PCA in detecting structure.\nLoadings Plot: Identifies SNPs contributing to genetic differences between populations.\nScree Plot: Guides selection of the number of PCs by identifying the point where the variance explained plateaus."
  },
  {
    "objectID": "unit2.html#for-choosing-the-number-of-pcs",
    "href": "unit2.html#for-choosing-the-number-of-pcs",
    "title": "Statistical Genetics - Unit 2",
    "section": "5.4 For choosing the number of PCs",
    "text": "5.4 For choosing the number of PCs\nPCs that capture minimal variance may not significantly contribute to the analysis, and including too many PCs may introduce noise, while too few may fail to capture important structure."
  },
  {
    "objectID": "unit2.html#journal-club-4-what-is-ancestry",
    "href": "unit2.html#journal-club-4-what-is-ancestry",
    "title": "Statistical Genetics - Unit 2",
    "section": "9.1 Journal Club 4: “What is Ancestry?”",
    "text": "9.1 Journal Club 4: “What is Ancestry?”\nThis paper talks about the complex and often misunderstood concept of ancestry in the context of genetics. Mathieson and Scally argue that genetic ancestry is not fixed identity or a clean label but rather a statement about shared segments of inherited DNA. Importantly, they distinguish genealogical ancestry from genetic ancestry. Since DNA is reshuffled via recombination each generation, we inherit only fragments from many ancestors, and not necessarily from all of them.\nSome Key Takeaways:\n\nAncestry is not categorical: any attempt to box people into rigid population labels is both scientifically misleading and ethically wrong.\nDiscussions of ancestry must balance scientific accuracy with social responsibility. Misinterpretations can lead to oversimplified or even harmful narratives about identity and race.\nThe paper raises concerns about combining genetic similarity with identity categories and emphasizing that the importance of transparent, careful communication when reporting genetic ancestry."
  },
  {
    "objectID": "unit2.html#journal-club-5-genes-mirror-geography-within-europe",
    "href": "unit2.html#journal-club-5-genes-mirror-geography-within-europe",
    "title": "Statistical Genetics - Unit 2",
    "section": "9.2 Journal Club 5: “Genes Mirror Geography Within Europe”",
    "text": "9.2 Journal Club 5: “Genes Mirror Geography Within Europe”\nThis study applies PCA to European genetic data and shows a stunning result: when plotted, the top PCs align geographically with a map of Europe. PC1 captures a northwest-to-southeast, and PC2 captures a northeast-to-southwest. That is the genetic varaition across Europe.\nSome Key Takeaways:\n\nPCA effectively picks up on population structure, even subtle differences due to historical migration.\nStudy shows that there is no sharp boundary between populations. Genetic variation exists along gradients.\nThis study suggested that phenotype differences correlated with geography could produce spurious associations in GWAS if population structure is not adjusted for."
  },
  {
    "objectID": "unit2.html#journal-club-6-svms-for-genetic-ancestry",
    "href": "unit2.html#journal-club-6-svms-for-genetic-ancestry",
    "title": "Statistical Genetics - Unit 2",
    "section": "9.3 Journal Club 6: “SVMs for Genetic Ancestry”",
    "text": "9.3 Journal Club 6: “SVMs for Genetic Ancestry”\nThis paper talked about how machine learning and model-based methods are used to infer ancestry from genotype data. Tools like PCA, Random Forests, and SVMs, as well as Bayesian models.\n\nSVMs and PCA can be useful for classification and visualization of ancestry, but genetic ancestry does not equal to race/ethnicity.\nInference can become ethically complicated when individuals who self-identify as mixed race are excluded.\n\nAdditionally, the paper notes that phenotypic traits can also correlate with geography, so failing to control for population structure could lead to confoudning in GWAS."
  }
]