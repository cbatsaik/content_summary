[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About",
    "section": "",
    "text": "About This Project\nThis website contains my summaries of key concepts from the Statistical Genetics (STAT 494) course. Choose from the summaries below to explore further:\n\nContent Summary 1: p &gt; n Problem\nContent Summary 2: Genetic Association, Population Stratification, and Omitted Variable Bias"
  },
  {
    "objectID": "unit2.html",
    "href": "unit2.html",
    "title": "Statistical Genetics - Unit 2",
    "section": "",
    "text": "In this unit, we learned how genetic ancestry influences GWAS and PCA can be applied to adjust for population structure. Through journal clubs discussions, simulation studies, lab, and lectures, we examined the challenges caused by confounding, conducted PCA on genetic data, and evaluated the results using few diagnostic tools."
  },
  {
    "objectID": "unit1.html#motivation-personal-learning-goals",
    "href": "unit1.html#motivation-personal-learning-goals",
    "title": "Unit 1: p > n problem",
    "section": "2.1 1.1 Motivation & Personal Learning Goals",
    "text": "2.1 1.1 Motivation & Personal Learning Goals\nIn this course, I aimed to:\n\nImplement appropriate statistical techniques in genetics.\n\nImprove my ability to read and summarize journal articles.\n\nDevelop foundational skills for future graduate work in Statistics, including time management, self-assessment, and working through challenges.\n\nThis document synthesizes what I’ve learned, referencing:\n\nClass slides on Genome-Wide Association Studies (GWAS), the p &gt; n problem, Manhattan plots, QQ plots, etc.\nLab assignments exploring marginal regression, multiple testing correction, and simulation-based approaches.\nJournal clubs & reflections that shaped my understanding of both the technical details and ethical considerations in statistical genetics."
  },
  {
    "objectID": "unit1.html#what-is-gwas",
    "href": "unit1.html#what-is-gwas",
    "title": "Unit 1: p > n Problem",
    "section": "3.1 2.1 What is GWAS?",
    "text": "3.1 2.1 What is GWAS?\nGenome-Wide Association Studies look for associations between genetic variants (e.g., SNPs) and traits & diseases. Each person’s genetic data is represented as a matrix of 0/1/2 values. This denotes the count of the minor allele at each SNP. The big challenge often is:\n\nHuge number of SNPs (p) vs. relatively smaller number of individuals (n)\nnecessitating marginal (single SNP) regression rather than a full multiple regression.\n\nKey Insight: Ordinary Least Squares fails if \\(p&gt;n\\) because \\(X^TX\\) becomes non-invertible."
  },
  {
    "objectID": "unit1.html#from-slides-to-practice",
    "href": "unit1.html#from-slides-to-practice",
    "title": "Unit 1: p > n Problem",
    "section": "3.2 2.2 From Slides to Practice",
    "text": "3.2 2.2 From Slides to Practice\nSome core things we discussed from the slides are:\n\nBasic Regression Model: \\(E[y|x]=\\beta_0+\\beta_1x\\)\nCoding 0/1/2: The number of minor alleles for each SNP.\nManhattan Plots: Visualization of \\(-\\log_{10}(p)\\) vs. genomic position.\n\n\n\nQQ plots: Diagnostic to compare observed p-values/test statistics to the expected null distribution."
  },
  {
    "objectID": "unit1.html#lab-1-the-pn-problem",
    "href": "unit1.html#lab-1-the-pn-problem",
    "title": "Unit 1: p > n problem",
    "section": "4.1 3.1 Lab 1: The p>n Problem",
    "text": "4.1 3.1 Lab 1: The p&gt;n Problem\n\n\nCode\nset.seed(494)\nn &lt;- 100       # number of individuals\np &lt;- 1000      # number of SNPs\nsnp_data &lt;- replicate(p, rbinom(n, size=2, prob=0.1))\ntrait_null &lt;- rnorm(n, mean=65, sd=3)\ndat &lt;- data.frame(y = trait_null, snp_data)\n# mod_full &lt;- lm(y ~ ., data = dat) # leads to singular fit"
  },
  {
    "objectID": "unit1.html#lab-2-implementing-visualizing-marginal-regression",
    "href": "unit1.html#lab-2-implementing-visualizing-marginal-regression",
    "title": "Unit 1: p > n problem",
    "section": "4.2 3.2 Lab 2: Implementing & Visualizing Marginal Regression",
    "text": "4.2 3.2 Lab 2: Implementing & Visualizing Marginal Regression\n\n\nCode\n# library(snpStats)\n# library(broom)\n# library(ggplot2)\n# library(qqman)\n# X &lt;- as(hapmap$genotypes, \"numeric\")\n# set.seed(494)\n# trait_y &lt;- 2 * X[,\"rs2476601\"] + rnorm(nrow(X), 0, 1)\n# pvals &lt;- numeric(ncol(X))\n# for (j in seq_len(ncol(X))) {\n#   mod &lt;- lm(trait_y ~ X[, j])\n#   pvals[j] &lt;- tidy(mod)$p.value[2]\n# }\n# results_df &lt;- hapmap$map %&gt;% mutate(P = pvals)\n# manhattan(results_df, chr=\"chromosome\", bp=\"position\", p=\"P\", snp=\"snp.name\", ylim=c(0,10))\n\n\nThis is a simple implementation of a marginal regression in GWAS. Although effective for finding associations, this approach can lead to false positives if multiple testing corrections are not applied.\nBonferroni vs. Simulation-Based Correction\nBonferroni Correction: Divides the significance level by the number of tests. Simple but overly conservative, particularly when SNPs are correlated.\nSimulation-Based Methods: Generate null datasets to empirically determine significance thresholds, reducing false positives while maintaining power."
  },
  {
    "objectID": "unit1.html#lab-3-multiple-testing-ld",
    "href": "unit1.html#lab-3-multiple-testing-ld",
    "title": "Unit 1: p > n problem",
    "section": "4.3 3.3 Lab 3: Multiple Testing & LD",
    "text": "4.3 3.3 Lab 3: Multiple Testing & LD\n\n\nCode\n# set.seed(494)\n# M &lt;- 500\n# n &lt;- nrow(X)\n# m &lt;- ncol(X)\n# min_pvals &lt;- replicate(M, {\n#   y_null &lt;- rnorm(n, 0, 1)\n#   p_tmp &lt;- numeric(m)\n#   for (j in seq_len(m)) {\n#     p_tmp[j] &lt;- tidy(lm(y_null ~ X[, j]))$p.value[2]\n#   }\n#   min(p_tmp)\n# })\n# thresh_5 &lt;- quantile(min_pvals, probs=0.05)"
  },
  {
    "objectID": "unit1.html#implementing-statistical-techniques",
    "href": "unit1.html#implementing-statistical-techniques",
    "title": "Unit 1: p > n problem",
    "section": "5.1 4.1 Implementing Statistical Techniques",
    "text": "5.1 4.1 Implementing Statistical Techniques\n\nMarginal Regression: Successfully coded single-SNP testing.\n\nMatrix Calculus & p &gt; n: Gained comfort with why OLS is undefined in high dimensions.\n\nMultiple Testing: Explored Bonferroni vs. simulation-based."
  },
  {
    "objectID": "unit1.html#reading-summarizing-articles",
    "href": "unit1.html#reading-summarizing-articles",
    "title": "Unit 1: p > n problem",
    "section": "5.2 4.2 Reading & Summarizing Articles",
    "text": "5.2 4.2 Reading & Summarizing Articles\n\nWeekly Journal Club exposed me to real-world GWAS methodologies.\n\nLearned to interpret Manhattan plots and QQ plots."
  },
  {
    "objectID": "unit1.html#broader-skill-development",
    "href": "unit1.html#broader-skill-development",
    "title": "Unit 1: p > n problem",
    "section": "5.3 4.3 Broader Skill Development",
    "text": "5.3 4.3 Broader Skill Development\n\nSelf-Assessment: Labs and reflections forced me to regularly check progress on implementing regression code, reading documentation, and time management.\n\nHandling Challenges: Overcame frustrations with large loops in R by using caching (cache:true) and smaller data subsets."
  },
  {
    "objectID": "unit2.html#local-vs-global-ancestry",
    "href": "unit2.html#local-vs-global-ancestry",
    "title": "Statistical Genetics - Unit 2",
    "section": "3.1 Local vs Global Ancestry",
    "text": "3.1 Local vs Global Ancestry\n\nLocal Ancestry refers to specific segments of DNA inherited from different ancestral populations.\nGlobal Ancestry represents the proportion of DNA inherited from various populations across the entire genome.\n\nFor example: A genome that is 40% from Population 1 and 60% from Population 2 reflects global ancestry proportions of 0.40 and 0.60.\nChallange: Determining the ancestral origin of genetic segments is difficult without robust comparison data."
  },
  {
    "objectID": "unit2.html#performing-pca-in-r",
    "href": "unit2.html#performing-pca-in-r",
    "title": "Statistical Genetics - Unit 2",
    "section": "4.1 Performing PCA in R",
    "text": "4.1 Performing PCA in R\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(GGally)\n\n\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\n\nCode\n# Load data\npcadata &lt;- read_csv('https://mac-stat.github.io/statgen/data/pca_toy_data.csv')\n\n\nRows: 1000 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (17): population, trait, SNP1, SNP2, SNP3, SNP4, SNP5, SNP6, SNP7, SNP8,...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# Perform PCA\ngeno &lt;- pcadata %&gt;% select(-population, -trait)\npca_out &lt;- prcomp(geno, center = TRUE, scale = TRUE)\npca_scores &lt;- pca_out$x"
  },
  {
    "objectID": "unit2.html#visualzing-pca-results",
    "href": "unit2.html#visualzing-pca-results",
    "title": "Statistical Genetics - Unit 2",
    "section": "4.2 Visualzing PCA results",
    "text": "4.2 Visualzing PCA results\n\n\nCode\npca_scores_df &lt;- as.data.frame(pca_scores) %&gt;%\n  mutate(population = pcadata$population)\n\nggplot(pca_scores_df, aes(x = PC1, y = PC2, color = as.factor(population))) +\n  geom_point(alpha = 0.7, size = 2) +\n  labs(title = \"PC1 vs. PC2 Scores\", color = \"Population\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nThis is the Score plot. This tells us…"
  }
]