maf <- col.summary(hapmap$genotypes)$MAF
X.clean <- X[, maf>0]
set.seed(2025)
snp_index <- sample(ncol(X.clean), 1)
snp_exposure <- X.clean[, snp_index]
snp_name <- colnames(X.clean)[snp_index]
cat("Using SNP:", snp_name, "\n")
n <- nrow(X.clean)
sex_sim <- rbinom(n, 1, 0.5)
height_sim <- 65 + 5 * sex_sim + 2 * snp_exposure + rnorm(n, mean = 0, sd = 3)
sim_data <- data.frame(
SNP = snp_exposure,
Sex = sex_sim,         # 0 = female, 1 = male
Height = height_sim
)
View(sim_data)
nrow(X.clean)
set.seed(123)
snp_index <- sample(ncol(X.clean), 1)
snp_name <- colnames(X.clean)[snp_index]
maf_val <- maf[snp_name]
cat("Using SNP:", snp_name, "with MAF =", maf_val, "\n")
n_large <- 1000  # number of individuals to simulate
# Simulate the SNP genotype for n_large individuals: 0, 1, or 2 copies of the minor allele.
# This follows a Binomial distribution with 2 trials.
snp_sim <- rbinom(n_large, size = 2, prob = maf_val)
# Simulate a binary Sex variable (0 = female, 1 = male) independent of the SNP
sex_sim <- rbinom(n_large, size = 1, prob = 0.5)
# Simulate Height as the collider variable:
# - Base height 65 for females, with males 5 units taller on average.
# - SNP adds an effect of 2 units per copy of the minor allele.
# - Add random noise with SD = 3.
height_sim <- 65 + 5 * sex_sim + 2 * snp_sim + rnorm(n_large, mean = 0, sd = 3)
sim_data <- data.frame(
SNP = snp_sim,
Sex = sex_sim,      # 0 = female, 1 = male
Height = height_sim
)
head(sim_data)
X <- as(hapmap$genotypes, "numeric")
maf <- col.summary(hapmap$genotypes)$MAF
X.clean <- X[, maf>0]
set.seed(123)
snp_index <- sample(ncol(X.clean), 1)
snp_name <- colnames(X.clean)[snp_index]
maf_val <- maf[snp_name]
cat("Using SNP:", snp_name, "with MAF =", maf_val, "\n")
n <- nrow(X.clean)
sex_sim <- rbinom(n, 1, 0.5)
height_sim <- 65 + 5 * sex_sim + 2 * snp_exposure + rnorm(n, mean = 0, sd = 3)
sim_data <- data.frame(
SNP = snp_exposure,
Sex = sex_sim,         # 0 = female, 1 = male
Height = height_sim
)
sim_data <- data.frame(
SNP = snp_exposure,
Sex = sex_sim,         # 0 = female, 1 = male
Height = height_sim
)
head(sim_data)
model_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
summary(model_unadj)
model_adj <- glm(Sex ~ SNP + Height, data = sim_data, family = binomial)
summary(model_adj)
# Load required packages
library(snpStats)
library(tidyverse)
library(broom)
library(qqman)
# ---------------------------
# Part 0: Use HapMap to get a SNP's MAF
# ---------------------------
# Assume 'hapmap' is already loaded from your earlier code.
# Compute minor allele frequencies for all SNPs in the HapMap dataset.
maf_hapmap <- col.summary(hapmap$genotypes)$MAF
# Select a SNP that is not monomorphic (MAF > 0)
non_mono <- which(maf_hapmap > 0)
set.seed(123)
snp_index <- sample(non_mono, 1)
maf_val <- maf_hapmap[snp_index]
snp_name <- names(maf_val)
cat("Selected SNP:", snp_name, "with MAF:", maf_val, "\n")
# ---------------------------
# Part 1: Simulation parameters
# ---------------------------
n_iter <- 1000  # number of simulation iterations
n <- 1000       # sample size per simulation
# Vectors to store p-values for the SNP coefficient in each model
pvals_unadj <- numeric(n_iter)
pvals_adj   <- numeric(n_iter)
set.seed(1234)  # For reproducibility of simulations
# ---------------------------
# Part 2: Simulation Loop
# ---------------------------
for (i in 1:n_iter) {
# Simulate genotype for n individuals using the allele frequency from HapMap.
# Genotype is the number of minor alleles (0, 1, or 2).
snp_sim <- rbinom(n, size = 2, prob = maf_val)
# Simulate a binary Sex variable (0 = female, 1 = male) independent of genotype.
sex_sim <- rbinom(n, size = 1, prob = 0.5)
# Simulate Height as the collider variable:
# - Base height is 65 for females.
# - Males get an extra 5 units on average.
# - Each copy of the minor allele adds 2 units.
# - Add random noise from a normal distribution (SD = 3).
height_sim <- 65 + 5 * sex_sim + 2 * snp_sim + rnorm(n, mean = 0, sd = 3)
# Combine into a data frame.
sim_data <- data.frame(SNP = snp_sim, Sex = sex_sim, Height = height_sim)
# ---------------------------
# Model 1: Unadjusted logistic regression (Sex ~ SNP)
# ---------------------------
mod_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
pvals_unadj[i] <- summary(mod_unadj)$coefficients["SNP", "Pr(>|z|)"]
# ---------------------------
# Model 2: Adjusted logistic regression (Sex ~ SNP + Height)
# ---------------------------
mod_adj <- glm(Sex ~ SNP + Height, data = sim_data, family = binomial)
pvals_adj[i] <- summary(mod_adj)$coefficients["SNP", "Pr(>|z|)"]
}
# ---------------------------
# Part 3: Create QQ Plots of the SNP p-values
# ---------------------------
# The unadjusted model should show p-values roughly uniformly distributed (since SNP and Sex are independent),
# whereas adjusting for Height (a collider) is expected to induce a spurious association.
qq(pvals_unadj, main = "QQ Plot: Unadjusted Model (Sex ~ SNP)")
qq(pvals_adj, main = "QQ Plot: Adjusted Model (Sex ~ SNP + Height)")
#| message: false
library(snpStats)
library(tidyverse)
library(broom)
library(qqman)
# update file paths
bed <- '../FP/data/1_QC_GWAS_FP/HapMap_3_r3_1.bed'
bim <- '../FP/data/1_QC_GWAS_FP/HapMap_3_r3_1.bim'
fam <- '../FP/data/1_QC_GWAS_FP/HapMap_3_r3_1.fam'
hapmap <- read.plink(bed, bim, fam)
#| message: false
library(snpStats)
library(tidyverse)
library(broom)
library(qqman)
# update file paths
bed <- '../FP/data/1_QC_GWAS_FP/HapMap_3_r3_1.bed'
bim <- '../FP/data/1_QC_GWAS_FP/HapMap_3_r3_1.bim'
fam <- '../FP/data/1_QC_GWAS_FP/HapMap_3_r3_1.fam'
hapmap <- read.plink(bed, bim, fam)
class(hapmap)
names(hapmap)
X <- as(hapmap$genotypes, "numeric")
maf <- col.summary(hapmap$genotypes)$MAF
set.seed(123)
snp_index <- sample(ncol(X.clean), 1)
set.seed(123)
snp_index <- sample(ncol(X), 1)
snp_name <- colnames(X.clean)[snp_index]
set.seed(123)
snp_index <- sample(ncol(X), 1)
snp_name <- colnames(X)[snp_index]
maf_val <- maf[snp_name]
cat("Using SNP:", snp_name, "with MAF =", maf_val, "\n")
X <- as(hapmap$genotypes, "numeric")
maf <- col.summary(hapmap$genotypes)$MAF
X.clean <- X[, maf>0]
set.seed(111)
#Randomly choosing 1 SNP from the cleaned geontype
snp_index <- sample(ncol(X.clean), 1)
snp_exposure <- X.clean[, snp_index]
snp_name <- colnames(X.clean)[snp_index]
cat("Using SNP:", snp_name)
#So i am assuming a baseline of 5foot 4 for females and adding 5 for males. So basically saying that average female height is 5 foot 4 and average male height is 5 foot 9. I am having a SNP have an effect (2 per copy) on height. Last, I am adding some error (totally made up the residual)
height_sim <- 64 + 5 * sex_sim + 2 * snp_exposure + rnorm(n, mean = 0, sd = 3)
n <- nrow(X.clean)
sex_sim <- rbinom(n, 1, 0.5)
#So i am assuming a baseline of 5foot 4 for females and adding 5 for males. So basically saying that average female height is 5 foot 4 and average male height is 5 foot 9. I am having a SNP have an effect (2 per copy) on height. Last, I am adding some error (totally made up the residual)
height_sim <- 64 + 5 * sex_sim + 2 * snp_exposure + rnorm(n, mean = 0, sd = 3)
model_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
model_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
sim_data <- data.frame(
SNP = snp_exposure,
Sex = sex_sim,         # 0 = female, 1 = male
Height = height_sim
)
head(sim_data)
model_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
summary(model_unadj)
model_adj <- glm(Sex ~ SNP + Height, data = sim_data, family = binomial)
summary(model_adj)
nrow(X.clean)
nrow(sim_data)
# update file paths
bed <- '../FP/data/1_QC_GWAS_FP/HapMap_3_r3_1.bed'
bim <- '../FP/data/1_QC_GWAS_FP/HapMap_3_r3_1.bim'
fam <- '../FP/data/1_QC_GWAS_FP/HapMap_3_r3_1.fam'
hapmap <- read.plink(bed, bim, fam)
class(hapmap)
names(hapmap)
X <- as(hapmap$genotypes, "numeric")
maf <- col.summary(hapmap$genotypes)$MAF
X.clean <- X[, maf>0]
nrow(X.clean)
View(X.clean)
set.seed(111)
#Randomly choosing 1 SNP from the cleaned geontype
snp_index <- sample(ncol(X.clean), 1)
snp_exposure <- X.clean[, snp_index]
snp_name <- colnames(X.clean)[snp_index]
cat("Using SNP:", snp_name, "MAF:", maf_val)
set.seed(111)
#Randomly choosing 1 SNP from the cleaned geontype
snp_index <- sample(ncol(X.clean), 1)
snp_exposure <- X.clean[, snp_index]
snp_name <- colnames(X.clean)[snp_index]
cat("Using SNP:", snp_name, "MAF:", maf)
set.seed(111)
#Randomly choosing 1 SNP from the cleaned geontype
snp_index <- sample(ncol(X.clean), 1)
snp_exposure <- X.clean[, snp_index]
snp_name <- colnames(X.clean)[snp_index]
cat("Using SNP:", snp_name)
n <- nrow(X.clean)
sex_sim <- rbinom(n, 1, 0.5)
#So i am assuming a baseline of 5foot 4 for females and adding 5 for males. So basically saying that average female height is 5 foot 4 and average male height is 5 foot 9. I am having a SNP have an effect (2 per copy) on height. Last, I am adding some error (totally made up the residual)
height_sim <- 64 + 5 * sex_sim + 2 * snp_exposure + rnorm(n, mean = 0, sd = 3)
sim_data <- data.frame(
SNP = snp_exposure,
Sex = sex_sim,
Height = height_sim
)
head(sim_data)
model_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
summary(model_unadj)
model_adj <- glm(Sex ~ SNP + Height, data = sim_data, family = binomial)
summary(model_adj)
library(qqman)
qq(pvals_unadj, main = "QQ Plot: Unadjusted Model (Sex ~ SNP)")
model_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
summary(model_unadj)
pvalue_unadjusted[i] <- summary(model_unadj)$coefficients["SNP", "Pr(>|z|)"]
model_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
summary(model_unadj)
pvalue_unadjusted[i] <- summary(model_unadj)$coefficients["SNP", "Pr(>|z|)"]
#| message: false
library(snpStats)
library(tidyverse)
library(broom)
library(qqman)
sexxx <- hapmap$genotype$fam
#| message: false
library(snpStats)
library(tidyverse)
library(broom)
library(qqman)
# update file paths
bed <- '../data/1_QC_GWAS_FP/HapMap_3_r3_1.bed'
bim <- '../data/1_QC_GWAS_FP/HapMap_3_r3_1.bim'
fam <- '../data/1_QC_GWAS_FP/HapMap_3_r3_1.fam'
hapmap <- read.plink(bed, bim, fam)
class(hapmap)
names(hapmap)
X <- as(hapmap$genotypes, "numeric")
maf <- col.summary(hapmap$genotypes)$MAF
X.clean <- X[, maf>0]
set.seed(111)
#Randomly choosing 1 SNP from the cleaned geontype
snp_index <- sample(ncol(X.clean), 1)
snp_exposure <- X.clean[, snp_index]
snp_name <- colnames(X.clean)[snp_index]
cat("Using SNP:", snp_name)
sex <- hapmap$fam
sex <- hapmap$fam
sex
summary(sex)
sex <- ifelse(hapmap$fam$sex == 2, 0, 1)
sex
nrow(sex)
View(hapmap$fam)
iterations <- 500
pvalues_unadj <- numeric(iterations)
pvalues_adj   <- numeric(iterations)
n <- nrow(X.clean)
set.seed(200)
for (i in 1:iterations) {
sex_sim <- sex
# Simulate height as the collider:
# Baseline of 64 inches (approx. 5'4") for females,
# add 5 inches for males, add SNP effect of 2 inches per copy,
# plus random noise (SD = 3).
height_sim <- 64 + 5 * sex_sim + 2 * snp_exposure + rnorm(n, mean = 0, sd = 3)
# Combine into a simulated data frame
sim_data <- data.frame(
SNP = snp_exposure,
Sex = sex_sim,
Height = height_sim
)
# Unadjusted model: Sex ~ SNP
mod_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
pvalues_unadj[i] <- summary(mod_unadj)$coefficients["SNP", "Pr(>|z|)"]
# Adjusted model: Sex ~ SNP + Height
mod_adj <- glm(Sex ~ SNP + Height, data = sim_data, family = binomial)
pvalues_adj[i] <- summary(mod_adj)$coefficients["SNP", "Pr(>|z|)"]
}
library(qqman)
qq(pvalues_unadj, main = "Sex~SNP QQ Plot")
qq(pvalues_adj, main = "Sex~SNP+HEIGHT QQ Plot")
# Recode HapMap sex: assuming 1 = male and 2 = female, we recode as 1 = male, 0 = female
sex <- ifelse(hapmap$fam$sex == 1, 0, 2)
iterations <- 500
pvalues_unadj <- numeric(iterations)
pvalues_adj   <- numeric(iterations)
n <- nrow(X.clean)
set.seed(200)
for (i in 1:iterations) {
sex_sim <- sex
# Simulate height as the collider:
# Baseline of 64 inches (approx. 5'4") for females,
# add 5 inches for males, add SNP effect of 2 inches per copy,
# plus random noise (SD = 3).
height_sim <- 64 + 5 * sex_sim + 2 * snp_exposure + rnorm(n, mean = 0, sd = 3)
# Combine into a simulated data frame
sim_data <- data.frame(
SNP = snp_exposure,
Sex = sex_sim,
Height = height_sim
)
# Unadjusted model: Sex ~ SNP
mod_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
pvalues_unadj[i] <- summary(mod_unadj)$coefficients["SNP", "Pr(>|z|)"]
# Adjusted model: Sex ~ SNP + Height
mod_adj <- glm(Sex ~ SNP + Height, data = sim_data, family = binomial)
pvalues_adj[i] <- summary(mod_adj)$coefficients["SNP", "Pr(>|z|)"]
}
# Recode HapMap sex: assuming 1 = male and 2 = female, we recode as 1 = male, 0 = female
sex <- ifelse(hapmap$fam$sex == 2, 0, 1)
#So i am assuming a baseline of 5foot 4 for females and adding 5 for males. So basically saying that average female height is 5 foot 4 and average male height is 5 foot 9. I am having a SNP have an effect (2 per copy) on height. Last, I am adding some error (totally made up the residual)
#height_sim <- 64 + 5 * sex_sim + 2 * snp_exposure + rnorm(n, mean = 0, sd = 3)
iterations <- 500
pvalues_unadj <- numeric(iterations)
pvalues_adj   <- numeric(iterations)
n <- nrow(X.clean)
set.seed(200)
for (i in 1:iterations) {
sex_sim <- sex
# Simulate height as the collider:
# Baseline of 64 inches (approx. 5'4") for females,
# add 5 inches for males, add SNP effect of 2 inches per copy,
# plus random noise (SD = 3).
height_sim <- 64 + 5 * sex_sim + 2 * snp_exposure + rnorm(n, mean = 0, sd = 3)
# Combine into a simulated data frame
sim_data <- data.frame(
SNP = snp_exposure,
Sex = sex_sim,
Height = height_sim
)
# Unadjusted model: Sex ~ SNP
mod_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
pvalues_unadj[i] <- summary(mod_unadj)$coefficients["SNP", "Pr(>|z|)"]
# Adjusted model: Sex ~ SNP + Height
mod_adj <- glm(Sex ~ SNP + Height, data = sim_data, family = binomial)
pvalues_adj[i] <- summary(mod_adj)$coefficients["SNP", "Pr(>|z|)"]
}
library(qqman)
qq(pvalues_unadj, main = "Sex~SNP QQ Plot")
qq(pvalues_adj, main = "Sex~SNP+HEIGHT QQ Plot")
iterations <- 500
pvals_unadj <- numeric(iterations)
pvals_adj   <- numeric(iterations)
n <- length(snp_exposure)  # number of individuals (e.g., 165)
set.seed(200)
for (i in 1:iterations) {
# Bootstrap sample indices
idx <- sample(1:n, n, replace = TRUE)
# Get bootstrap samples for genotype and observed sex
snp_bs <- snp_exposure[idx]
sex_bs <- sex[idx]
# Simulate height as the collider:
# Baseline height of 64 inches; add 5 inches for males;
# add SNP effect of 2 inches per copy; add random noise (SD = 3).
height_bs <- 64 + 5 * sex_bs + 2 * snp_bs + rnorm(n, mean = 0, sd = 3)
# Combine into a data frame
sim_data <- data.frame(
SNP = snp_bs,
Sex = sex_bs,
Height = height_bs
)
# Unadjusted model: Sex ~ SNP
mod_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
pvals_unadj[i] <- summary(mod_unadj)$coefficients["SNP", "Pr(>|z|)"]
# Adjusted model: Sex ~ SNP + Height
mod_adj <- glm(Sex ~ SNP + Height, data = sim_data, family = binomial)
pvals_adj[i] <- summary(mod_adj)$coefficients["SNP", "Pr(>|z|)"]
}
# ---------------------------
# QQ Plots to Compare the Distribution of p-values
# ---------------------------
qq(pvals_unadj, main = "QQ Plot: Unadjusted Model (Sex ~ SNP)")
qq(pvals_adj, main = "QQ Plot: Adjusted Model (Sex ~ SNP + Height)")
iterations <- 500
pvalues_unadj <- numeric(iterations)
pvalues_adj   <- numeric(iterations)
n <- nrow(X.clean)  # Number of individuals (165 in this dataset)
set.seed(200)
for (i in 1:iterations) {
# Use the observed sex vector (do not simulate it)
sex_sim <- sex
# Simulate height as the collider:
# Baseline of 64 inches (approx. 5'4") for females,
# add 5 inches for males, add SNP effect of 2 inches per copy,
# plus random noise (SD = 3).
height_sim <- 64 + 5 * sex_sim + 2 * snp_exposure + rnorm(n, mean = 0, sd = 3)
# Combine into a simulated data frame
sim_data <- data.frame(
SNP = snp_exposure,
Sex = sex_sim,
Height = height_sim
)
# Unadjusted model: Sex ~ SNP
mod_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
pvalues_unadj[i] <- summary(mod_unadj)$coefficients["SNP", "Pr(>|z|)"]
# Adjusted model: Sex ~ SNP + Height
mod_adj <- glm(Sex ~ SNP + Height, data = sim_data, family = binomial)
pvalues_adj[i] <- summary(mod_adj)$coefficients["SNP", "Pr(>|z|)"]
}
library(qqman)
qq(pvalues_unadj, main = "Sex~SNP QQ Plot")
qq(pvalues_adj, main = "Sex~SNP+HEIGHT QQ Plot")
nrow(sex)
# Recode HapMap sex: assuming 1 = male and 2 = female, we recode as 1 = male, 0 = female
sex <- data.frame(ifelse(hapmap$fam$sex == 2, 0, 1))
nrow(sex)
iterations <- 500
pvalues_unadj <- numeric(iterations)
pvalues_adj   <- numeric(iterations)
n <- nrow(X.clean)  # Number of individuals (165 in this dataset)
set.seed(200)
for (i in 1:iterations) {
# Use the observed sex vector (do not simulate it)
sex_sim <- sex
# Simulate height as the collider:
# Baseline of 64 inches (approx. 5'4") for females,
# add 5 inches for males, add SNP effect of 2 inches per copy,
# plus random noise (SD = 3).
height_sim <- 64 + 5 * sex_sim + 2 * snp_exposure + rnorm(n, mean = 0, sd = 3)
# Combine into a simulated data frame
sim_data <- data.frame(
SNP = snp_exposure,
Sex = sex_sim,
Height = height_sim
)
# Unadjusted model: Sex ~ SNP
mod_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
pvalues_unadj[i] <- summary(mod_unadj)$coefficients["SNP", "Pr(>|z|)"]
# Adjusted model: Sex ~ SNP + Height
mod_adj <- glm(Sex ~ SNP + Height, data = sim_data, family = binomial)
pvalues_adj[i] <- summary(mod_adj)$coefficients["SNP", "Pr(>|z|)"]
}
iterations <- 500
pvalues_unadj <- numeric(iterations)
pvalues_adj   <- numeric(iterations)
n <- nrow(X.clean)  # Number of individuals (165 in this dataset)
set.seed(200)
for (i in 1:iterations) {
# Use the observed sex vector (do not simulate it
# Simulate height as the collider:
# Baseline of 64 inches (approx. 5'4") for females,
# add 5 inches for males, add SNP effect of 2 inches per copy,
# plus random noise (SD = 3).
height_sim <- 64 + 5 * sex + 2 * snp_exposure + rnorm(n, mean = 0, sd = 3)
# Combine into a simulated data frame
sim_data <- data.frame(
SNP = snp_exposure,
Sex = sex,
Height = height_sim
)
# Unadjusted model: Sex ~ SNP
mod_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
pvalues_unadj[i] <- summary(mod_unadj)$coefficients["SNP", "Pr(>|z|)"]
# Adjusted model: Sex ~ SNP + Height
mod_adj <- glm(Sex ~ SNP + Height, data = sim_data, family = binomial)
pvalues_adj[i] <- summary(mod_adj)$coefficients["SNP", "Pr(>|z|)"]
}
# Recode HapMap sex: assuming 1 = male and 2 = female, we recode as 1 = male, 0 = female
# Recode HapMap sex: assuming 1 = male and 2 = female, we recode as 1 = male, 0 = female
sex <- ifelse(hapmap$fam$sex == 2, 0, 1)
length(sex)
iterations <- 500
pvalues_unadj <- numeric(iterations)
pvalues_adj   <- numeric(iterations)
n <- nrow(X.clean)  # Number of individuals (165 in this dataset)
set.seed(200)
for (i in 1:iterations) {
# Use the observed sex vector (already recoded) directly
# Simulate height as the collider:
# Baseline of 64 inches, add 5 inches for males, add SNP effect of 2 per copy,
# plus random noise (SD = 3)
height_sim <- 64 + 5 * sex + 2 * snp_exposure + rnorm(n, mean = 0, sd = 3)
# Combine into a simulated data frame
sim_data <- data.frame(
SNP = snp_exposure,
Sex = sex,
Height = height_sim
)
# Unadjusted model: Sex ~ SNP
mod_unadj <- glm(Sex ~ SNP, data = sim_data, family = binomial)
pvalues_unadj[i] <- summary(mod_unadj)$coefficients["SNP", "Pr(>|z|)"]
# Adjusted model: Sex ~ SNP + Height
mod_adj <- glm(Sex ~ SNP + Height, data = sim_data, family = binomial)
pvalues_adj[i] <- summary(mod_adj)$coefficients["SNP", "Pr(>|z|)"]
}
library(qqman)
qq(pvalues_unadj, main = "Sex~SNP QQ Plot")
qq(pvalues_adj, main = "Sex~SNP+HEIGHT QQ Plot")
