library(ggdag)
library(dagitty)
dag_conf <- dagitty('
dag {
Ancestry -> Genotype
Ancestry -> Trait
Genotype -> Trait
}
')
ggdag(dag_conf) +
theme_minimal() +
labs(title = "Ancestry as a Confounder")
library(ggdag)
library(dagitty)
dag_conf <- dagitty('
dag {
Ancestry -> Genotype
Ancestry -> Trait
Genotype -> Trait
}
')
ggdag(dag_conf) +
theme_minimal() +
labs(title = "Ancestry as a Confounder")
library(tidyverse)
library(GGally)
# Load data
pcadata <- read_csv('https://mac-stat.github.io/statgen/data/pca_toy_data.csv')
# Perform PCA
geno <- pcadata %>% select(-population, -trait)
pca_out <- prcomp(geno, center = TRUE, scale = TRUE)
pca_scores <- pca_out$x
pca_scores_df <- as.data.frame(pca_scores) %>%
mutate(population = pcadata$population)
ggplot(pca_scores_df, aes(x = PC1, y = PC2, color = as.factor(population))) +
geom_point(alpha = 0.7, size = 2) +
labs(title = "PC1 vs. PC2 Scores", color = "Population") +
theme_minimal()
library(ggdag)
library(dagitty)
dag_conf <- dagitty('
dag {
Ancestry -> Genotype
Ancestry -> Trait
Genotype -> Trait
}
')
ggdag(dag_conf) +
theme_minimal() +
labs(title = "Ancestry as a Confounder")
pc1 <- pca_scores[, "PC1"]
model <- lm(trait ~ SNP1 + pc1, data = pcadata)
summary(model)
dag_col <- dagitty("
dag {
Smoking -> Cholesterol
Weight -> Cholesterol}")
ggdag(dag_col)+
theme_minimal()+
ggtitle("Collider bias example")
pc1 <- pca_scores[, "PC1"]
model <- lm(trait ~ SNP1+pc1, data=pcadata)
summary(model)
pca_var <- (pca_out$sdev)^2
pca_var <- (pca_out$sdev)^2
total_var <- sum(pca_var)
pve <- pca_var/total_var
ggplot(data.frame(PC=1:length(pve), Variance=pve), aes(x=PC, y=Variance))+
geom_col(fill="blue")+
labs(title="Scree Plot", x="PC", y="Proportion of Variance")
pca_var <- (pca_out$sdev)^2
total_var <- sum(pca_var)
pve <- pca_var/total_var
ggplot(data.frame(PC=1:length(pve), Variance=pve), aes(x=PC, y=Variance))+
geom_col(fill="blue")+
labs(title="Scree Plot", x="PC", y="Proportion of Variance Explained" )
library(SNPRelate)
# Open the GDS file
genofile <- snpgdsOpen(snpgdsExampleFileName())
# Perform PCA using SNPRelate
pca <- snpgdsPCA(genofile, num.thread = 2)
# Calculate variance explained
pc.percent <- pca$varprop * 100
# Plot the scree plot
plot(pc.percent, type = "b",
xlab = "Principal Component",
ylab = "Percent Variance Explained",
main = "Scree Plot using SNPRelate")
# Close the GDS file
snpgdsClose(genofile)
